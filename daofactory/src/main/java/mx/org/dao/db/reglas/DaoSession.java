package mx.org.dao.db.reglas;

import java.lang.reflect.Constructor;
import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import mx.org.dao.db.comun.dto.IBaseDto;
import mx.org.dao.db.dao.TrMovilSentenciasDao;
import mx.org.dao.libs.formato.Error;
// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig trMovilSentenciasDaoConfig;

    private final TrMovilSentenciasDao trMovilSentenciasDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        trMovilSentenciasDaoConfig = daoConfigMap.get(TrMovilSentenciasDao.class).clone();
        trMovilSentenciasDaoConfig.initIdentityScope(type);

        trMovilSentenciasDao = new TrMovilSentenciasDao(trMovilSentenciasDaoConfig, this);

        //registerDao(TrMovilSentenciasDao.class, trMovilSentenciasDao);
    }
    
    public void clear() {
        trMovilSentenciasDaoConfig.clearIdentityScope();
    }

    public TrMovilSentenciasDao getTrMovilSentenciasDao() {
        return trMovilSentenciasDao;
    }

    public AbstractDao getDao(IBaseDto dto){
        return getDaoComun(dto.getClass().getName().replace(".dto.",".dao.").replace("Dto","Dao"));
    } // getDao

    public AbstractDao getDao(Class dto){
        return getDaoComun(dto.getName().replace(".dto.",".dao.").replace("Dto","Dao"));
    } // getDao

    private AbstractDao getDaoComun(String nombreClase){
        Class clase            = null;
        AbstractDao regresar   = null;
        Constructor constructor= null;
        DaoConfig daoConfig    = null;
        try{
            clase= Class.forName(nombreClase);
            constructor= clase.getConstructor(DaoConfig.class, DaoSession.class);
            daoConfig= new DaoConfig(getDatabase(), clase);
            regresar = (AbstractDao)constructor.newInstance(daoConfig, this);
        } // try
        catch(Exception e){
            Error.mensaje(e);
        } // catch
        return regresar;
    } // getDaoComun
}
